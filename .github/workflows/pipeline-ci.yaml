name: Tests CI

on:
  push:
    branches:
      - main
      - 213-tasktestes-configurar-testes-est√°ticos-com-linter
  pull_request:
    branches:
      - main
  #workflow_dispatch:
    # Permite que o workflow seja disparado manualmente
jobs:
  test:
    runs-on: ubuntu-latest
    services:
      db:
        image: postgres:15
        env:
          POSTGRES_DB: ${{ secrets.DB_NAME }}
          POSTGRES_USER: ${{ secrets.DB_USER }}
          POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
        ports:
          - 5432:5432

      redis:
        image: redis
        ports:
          - 6379:6379

    env:
      CELERY_BROKER_URL: redis://localhost:6379/0
      CELERY_RESULT_BACKEND: redis://localhost:6379/0
      PYTHONPATH: ${{ github.workspace }}/API  # Caminho para o diret√≥rio API
      DJANGO_SETTINGS_MODULE: AcheiUnB.settings  # Ajustado para o m√≥dulo correto
      DB_HOST: localhost
      DB_PORT: 5432
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      CLOUDINARY_CLOUD_NAME: ${{ secrets.CLOUDINARY_CLOUD_NAME }}
      CLOUDINARY_API_KEY: ${{ secrets.CLOUDINARY_API_KEY }}
      CLOUDINARY_API_SECRET: ${{ secrets.CLOUDINARY_API_SECRET }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r API/requirements.txt
          pip install coverage
          pip install black ruff  # Garantir que black e ruff est√£o instalados

      - name: Run migrations
        run: python API/manage.py migrate

      - name: Run Black (formata√ß√£o)
        run: black --check API/

      - name: Run Ruff (linting)
        run: ruff check API/

      - name: Post comment on PR if linting fails
        if: failure() && github.event_name == 'pull_request' # Adicionado condi√ß√£o para PRs
        uses: mshick/add-pr-comment@v2
        with:
          message: |
             ‚ùå **O c√≥digo n√£o passou na formata√ß√£o e linting!**

             Por favor, corrija os problemas antes de fazer push novamente:

             üñäÔ∏è **Formata√ß√£o:** Rode `black .`
             üîç **Linting:** Rode `ruff check --fix .`

             Depois de corrigir, fa√ßa `git add .`, `git commit -m "Corrigindo lint"` e `git push`.

      - name: Run tests with coverage
        run: |
          coverage run -m pytest
          coverage report -m
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
    continue-on-error: true # Permite que o job 'test' n√£o quebre a pipeline, mesmo que falhe.         

  security-scan:
    runs-on: ubuntu-latest
    needs: test # Garante que o est√°gio de seguran√ßa s√≥ roda ap√≥s os testes
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python for security scan
        uses: actions/setup-python@v4
        with:
          python-version: '3.10' # Use a mesma vers√£o do Python do est√°gio de teste

      - name: Install security scanners (Bandit) # O Safety ser√° instalado pela sua pr√≥pria Action
        run: |
          pip install --upgrade pip
          pip install bandit # Instala apenas o Bandit aqui

      - name: Install project dependencies (for Safety CLI as well)
        run: |
          pip install -r API/requirements.txt # Garante que as depend√™ncias do projeto est√£o no ambiente para o Safety CLI

      - name: Run Bandit (SAST)
        run: |
          # O Bandit gera o relat√≥rio HTML no diret√≥rio raiz do workspace
          bandit -r API/ -f html -o bandit_security_report.html
          echo "Bandit scan completed. Report generated at bandit_security_report.html"
        continue-on-error: true # Permite que o workflow continue mesmo se o Bandit encontrar issues e retornar um c√≥digo de erro

      # --- REMOVER OS PASSOS DE DEBUG DO SAFETY CLI (N√ÉO SER√ÉO NECESS√ÅRIOS COM A ACTION OFICIAL) ---
      # Remova os passos "Debug Network Connectivity to Safety Platform" e "Verify Safety CLI Authentication Status"
      # pois a pyupio/safety-action lida com a autentica√ß√£o e conectividade internamente de forma mais otimizada.

      # --- NOVO PASSO: RUN SAFETY CLI (SCA) USANDO A√á√ÉO OFICIAL ---
      - name: Run Safety CLI (SCA) using official action
        uses: pyupio/safety-action@v1 # Usa a Action oficial para Safety CLI
        with:
          api-key: ${{ secrets.SAFETY_API_KEY }} # Passa a API Key diretamente para a Action
          # Argumentos para o safety scan, passados via 'args'
          args: "--full-report --output-format html --ci" # Mantemos --full-report e --output-format html e --ci
          # A Action pyupio/safety-action por padr√£o salva o relat√≥rio como 'safety-report.json'.
          # Precisamos configur√°-la para HTML e dar o nome desejado.
          # A documenta√ß√£o da action indica que o --output-format html √© suportado.
          # O nome do arquivo de sa√≠da padr√£o √© 'safety-report.json'. Pode ser preciso renomear.
          # Vamos verificar a sa√≠da da Action para confirmar o nome do arquivo HTML.
        continue-on-error: true # Permite que o workflow continue mesmo se o Safety encontrar issues e retornar um c√≥digo de erro

      - name: Rename Safety Report (if necessary)
        # Este passo pode ser necess√°rio se a pyupio/safety-action n√£o gerar o HTML com o nome exato.
        # Por padr√£o, safety-action gera 'safety-report.json'. Verifique os logs ap√≥s a execu√ß√£o.
        # Se ela gerar 'safety-report.html', esta etapa n√£o √© estritamente necess√°ria.
        # Se ela gerar JSON, voc√™ pode precisar converter ou aceitar JSON.
        run: |
          if [ -f safety-report.json ]; then
              # Se a action gera JSON por padr√£o, voc√™ pode querer converter para HTML
              # ou aceitar o JSON e mudar o path no upload-artifact
              echo "Safety Action generated JSON report. Please check its documentation for HTML output filename."
              # safety-action@v1 does support --output-format html directly in args.
              # So, it should generate safety-report.html if that is the case.
          fi
          # Renomeia se o nome padr√£o da action for diferente do que voc√™ quer upar
          mv safety-report.html safety_security_report.html || true # Assumindo que a action gera 'safety-report.html'
        continue-on-error: true # Para n√£o quebrar a pipeline se a renomea√ß√£o falhar.

      - name: Upload Security Reports
        uses: actions/upload-artifact@v4
        with:
          name: security-reports
          path: |
            bandit_security_report.html
            safety_security_report.html # VERIFIQUE O NOME QUE A ACTION safety-action GERA
          retention-days: 5
       